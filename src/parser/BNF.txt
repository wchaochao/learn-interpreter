number ::= 'INTEGER_CONST' | 'REAL_CONST'
variable ::= ID
factor ::= number | variable | 'LPAREN' expr 'RPAREN'
unary ::= ('PLUS' | 'MINUS')* factor
term ::= unary(('MUL' | 'INTEGER_DIV' | 'FLOAT_DIV') unary)*
expr ::= term (('PLUS' | 'MINUS') term)*
empty ::=
assignment ::= variable 'ASSIGN' expr
procedureCall ::= 'ID' 'LPAREN' (expr ('COMMA' expr)*)? 'RPAREN'
statement ::= empty | assignment | procedureCall | compound
statementList ::= statement ('SEMI' statement)*
compound ::= 'BEGIN' statementList 'END'
type ::= 'INTEGER' | 'REAL'
variableDeclaration ::= 'ID' ('COMMA' 'ID')* 'COLON' type
variableDeclarationList ::= (variableDeclaration 'SEMI')+
formalParam ::= 'ID' ('COMMA' 'ID')* 'COLON' type
formalParamList ::= formalParam ('SEMI' formalParam)*
ProcedureDeclaration ::= 'PROCEDURE' 'ID' ('LPAREN' formalParamList 'RPAREN')? 'SEMI' block 'SEMI'
declarations ::= ('VAR' variableDeclarationList)* (procedureDeclaration)*
block ::= declarations compound
program ::= 'PROGRAM' 'ID' 'SEMI' block 'DOT'
